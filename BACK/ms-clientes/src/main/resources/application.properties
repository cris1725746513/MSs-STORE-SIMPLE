//Perfiles en Quarkus
//mvn quarkus:dev por defecto usa las propiedades que comiencen con "quarkus" mas "%dev.quarkus"
//mvn quarkus:test por defecto usa las propiedades que comiencen con "quarkus" mas "%test.quarkus"
//mvn package por defecto usa las propiedades que comiencen con "quarkus" mas "%prod.quarkus"
//las propiedades que no llevan un perfil "%nombrePerfil." son transversales a todos los perfiles
//para aplicar un perfil personalizado, usar "mvn quarkus:dev -Dquarkus.profile=nombrePerfil"
//para el pipeline de Gitlab solo se admiten los perfiles dev_eks, stg_eks y pro_eks

//En MAC M1, ejecutar el siguiente comando en caso de fallar los devservices
//sudo ln -s $HOME/.docker/run/docker.sock /var/run/docker.sock


//Configuracion e informacion para documentacion automatica via OpenAPI y Swagger-UI
quarkus.smallrye-openapi.info-title=ms-clientes
quarkus.smallrye-openapi.info-version=1.0
quarkus.smallrye-openapi.info-description=API READ_PERSONAS
quarkus.smallrye-openapi.info-contact-email=techsupport@example.com
quarkus.smallrye-openapi.info-contact-name=Nombre persona contacto
quarkus.smallrye-openapi.info-contact-url=http://exampleurl.com/contact
quarkus.smallrye-openapi.info-license-name=Licencia Apache 2.0
quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html

//Configuracion del nombre del endpoint para el swagger
quarkus.smallrye-openapi.path=/swagger

//NO MODIFICAR
quarkus.native.add-all-charsets=true
quarkus.locales=es

//Configuracion del Microservicio que nos permite Quarkus
quarkus.http.port=8080
quarkus.banner.path=banner_bice_vida.txt
quarkus.smallrye-health.root-path=/health

//Configuracion del Pool de conexiones
quarkus.datasource.jdbc.initial-size=5
quarkus.datasource.jdbc.min-size=3
quarkus.datasource.jdbc.max-size=10
quarkus.datasource.jdbc.enable-metrics=true

//CONFIG DE AMBIENTES
//***LOCAL*** usando MySql con docker (devservices incorporado de Quarkus)
//En MAC M1, ejecutar el siguiente comando en caso de fallar los devservices
//sudo ln -s $HOME/.docker/run/docker.sock /var/run/docker.sock
//log automatically SQL statements
local.quarkus.hibernate-orm.log.sql=true
//quarkus.hibernate-orm.sql-load-script=DEMO_PAIS_TABLE.sql
quarkus.hibernate-orm.database.generation=validate

//CONFIG GLOBAL DATASOURCE
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.driver=org.postgresql.Driver
quarkus.datasource.jdbc.acquisition-timeout=60

//SECRETOS DENTRO DE CLUSTER, MISMA REF PARA TODOS LOS AMBIENTES
quarkus.datasource.jdbc.url=${DATASOURCE_URL}
quarkus.datasource.username=${POSTGRES_USER}
quarkus.datasource.password=${POSTGRES_PASSWORD}


//AMBIENTES DE GITLAB

//Dev environment configuration profile
%dev_eks.quarkus.datasource.jdbc.url=rac.dev.bicevida.cl

//Dev environment variables
%dev_eks.pais.ciudad=santiago

//STG environment configuration profile
%stg_eks.quarkus.datasource.jdbc.url=rac.qa.bicevida.cl

//STG environment variables
%stg_eks.pais.ciudad=chillan

//Production environment configuration profile
%pro_eks.quarkus.datasource.jdbc.url=rac.prod.bicevida.cl

//Production environment variables
%pro_eks.pais.ciudad=arica

//Niveles de Log
%dev.quarkus.log.console.level=DEBUG
%dev_eks.quarkus.log.console.level=DEBUG
%stg_eks.quarkus.log.console.level=TRACE
%test.quarkus.log.console.level=TRACE
%prod.quarkus.log.console.level=SEVERE
%pro_eks.quarkus.log.console.level=SEVERE


quarkus.http.cors.methods=GET,PUT,POST,DELETE
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.origins=http://localhost:4200,http://localhost:9090